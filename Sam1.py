from datetime import datetime # Импортирует из стандартного модуля datetime одноименную функцию
from math import sqrt # Импортирует из стандартного модуля math функцию sqrt

def main(**kwargs):
    """
    Функция main принимает в качестве аргумента переменное число именованных аргументов или
    словарь с этими аргументами (где ключ - какая-то строка, а значение - список из двух чисел),
    затем прогоняет все аргументы по циклу, рассчитывая и выводя в консоль квадратный корень
    из суммы квадратов чисел из значения каждого из аргументов. Это используется, например, для
    нахождения гипотенузы прямоугольного треугольника по катетам по теореме Пифагора.
    """
    for key in kwargs.items(): # Инициализирует цикл по значениям словаря kwargs, передаваемых
                               # в виде списков из двух элементов, первый из которых - ключ (название
                               # аргумента), а второй - значение аргумента.
        result=sqrt(key[1][0]**2+key[1][1]**2) # создаёт переменную result, в которую записывается
                               # квадратный корень из суммы квадратов чисел из значений каждого
                               # из аргументов
        print(result) # выводит значение result в консоль

if __name__=='__main__': # запуск этого кода происходит через точку входа __main__ - запуск кода как программы
    start_time=datetime.now() # в переменную start_time заносится текущие дата и время через функцию datetime.now()
    main(
        one=[10,3],
        two=[5,4],
        three=[15,13],
        four=[93,53],
        five=[133,15]
    ) # вызов функции main с аргументами one, two, three, four и five, имеющие значения-списками,
      # в каждом из которых по два числа: 10 и 3, 5 и 4, 15 и 13, 93 и 53, 133 и 15 соответственно.
    time_costs=datetime.now()-start_time # в переменную time_costs заносится разница
                                         # между текущими датой и временем (через функцию datetime.now())
                                         # и датой и временем из start_time
    print(f"Время выполнения программы - {time_costs}") # вывод на экран строки "Время выполнения
                                                        # программы -" и значения time_costs
    print(main.__doc__) # вывод документации по функции main